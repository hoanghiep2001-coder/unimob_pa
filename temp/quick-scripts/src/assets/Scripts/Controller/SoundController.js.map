{"version":3,"sources":["assets\\Scripts\\Controller\\SoundController.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;;;;;;;;;;;;;;;AAElF,iDAA4C;AAEtC,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAqC,mCAA0B;IAK3D;QAAA,YACI,iBAAO,SAEV;QALM,YAAM,GAAqB,EAAE,CAAC;QAIjC,iBAAe,CAAC,SAAS,GAAG,KAAI,CAAC;;IACrC,CAAC;wBARQ,eAAe;IAWd,gCAAM,GAAhB;IAEA,CAAC;IAGS,+BAAK,GAAf;QACI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;IACpE,CAAC;IAGM,mCAAS,GAAhB,UAAiB,SAAiB;QAC9B,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,EAA7B,CAA6B,CAAC,CAAC;QACtE,MAAM,CAAC,IAAI,EAAE,CAAC;IAClB,CAAC;IAGD,gEAAgE;IAChE,6EAA6E;IAC7E,IAAI;IAGG,mCAAS,GAAhB,UAAiB,SAAiB;QAC9B,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,EAA7B,CAA6B,CAAC,CAAC;QACtE,MAAM,CAAC,IAAI,EAAE,CAAC;IAClB,CAAC;IAGM,sCAAY,GAAnB;QACI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC,CAAC;IAC/C,CAAC;;IAxCQ,eAAe;QAD3B,OAAO;OACK,eAAe,CA2C3B;IAAD,sBAAC;CA3CD,AA2CC,CA3CoC,mBAAS,GA2C7C;AA3CY,0CAAe","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport Singleton from \"../Plugin/Singleton\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport class SoundController extends Singleton<SoundController> {\r\n\r\n\r\n    public sounds: cc.AudioSource[] = [];\r\n\r\n    constructor() {\r\n        super();\r\n        SoundController._instance = this;\r\n    }\r\n\r\n\r\n    protected onLoad(): void {\r\n\r\n    }\r\n\r\n\r\n    protected start(): void {\r\n        this.sounds = this.node.getComponentsInChildren(cc.AudioSource);\r\n    }\r\n\r\n\r\n    public playSound(soundName: string): void {\r\n        let result = this.sounds.find(sound => sound.node.name === soundName);\r\n        result.play();\r\n    }\r\n\r\n\r\n    // public muteSound(soundName: string, isMuted: boolean): void {\r\n    //     let result = this.sounds.find(sound => sound.node.name === soundName);\r\n    // }\r\n\r\n\r\n    public stopSound(soundName: string): void {\r\n        let result = this.sounds.find(sound => sound.node.name === soundName);\r\n        result.stop();\r\n    }\r\n\r\n\r\n    public stopAllSound(): void {\r\n        this.sounds.forEach(sound => sound.stop());\r\n    }\r\n\r\n\r\n}\r\n"]}