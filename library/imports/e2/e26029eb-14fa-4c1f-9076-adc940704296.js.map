{"version":3,"sources":["assets\\Scripts\\PuzzlePiece.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAM,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAA2B,yBAAY;IAAvC;QAAA,qEA2CC;QAtCW,aAAO,GAAiB,IAAI,CAAC;;IAsCzC,CAAC;IA/BG,sBAAW,0BAAO;aAAlB;YACI,OAAO,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,CAAC;QACtE,CAAC;;;OAAA;IAEM,oBAAI,GAAX,UAAY,GAAW,EAAE,GAAW,EAAE,MAAc,EAAE,QAAgB;QAClE,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QAElB,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QAC/C,yDAAyD;QACzD,2CAA2C;QAC3C,IAAI,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAClE,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACvC,IAAI,aAAa,GAAG,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACzC,IAAI,QAAQ,GAAG,GAAG,GAAG,YAAY,CAAC;QAClC,IAAI,QAAQ,GAAG,CAAC,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,aAAa,CAAC;QAClD,IAAI,OAAO,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,YAAY,EAAE,aAAa,CAAC,CAAC;QACvE,uCAAuC;QACvC,MAAM,CAAC,WAAW,GAAG,IAAI,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAE/D,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;QAE5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,KAAK,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC;QAC/D,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SAC5B;IACL,CAAC;IApCD;QAHC,QAAQ,CAAC;YACN,IAAI,EAAE,EAAE,CAAC,SAAS;SACrB,CAAC;0CACmC;IAL5B,KAAK;QADjB,OAAO;OACK,KAAK,CA2CjB;IAAD,YAAC;CA3CD,AA2CC,CA3C0B,EAAE,CAAC,SAAS,GA2CtC;AA3CY,sBAAK","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class Piece extends cc.Component {\r\n\r\n    @property({\r\n        type: cc.Texture2D\r\n    })\r\n    private texture: cc.Texture2D = null;\r\n\r\n    public oriCol: number;\r\n    public oriRow: number;\r\n    public curCol: number;\r\n    public curRow: number;\r\n    public isBlank: boolean;\r\n    public get isRight() {\r\n        return this.curCol === this.oriCol && this.curRow === this.oriRow;\r\n    }\r\n\r\n    public init(col: number, row: number, colNum: number, colWidth: number) {\r\n        this.oriCol = col;\r\n        this.oriRow = row;\r\n        this.curCol = col;\r\n        this.curRow = row;\r\n\r\n        let sprite = this.node.addComponent(cc.Sprite);\r\n        // sprite.spriteFrame = new cc.SpriteFrame(this.texture);\r\n        // let rect = sprite.spriteFrame.getRect();\r\n        let rect = cc.rect(0, 0, this.texture.width, this.texture.height);\r\n        let newRectWidth = rect.width / colNum;\r\n        let newRectHeight = rect.height / colNum;\r\n        let newRectX = col * newRectWidth;\r\n        let newRectY = (colNum - row - 1) * newRectHeight;\r\n        let newRect = cc.rect(newRectX, newRectY, newRectWidth, newRectHeight);\r\n        // sprite.spriteFrame.setRect(newRect);\r\n        sprite.spriteFrame = new cc.SpriteFrame(this.texture, newRect);\r\n\r\n        this.node.width = colWidth;\r\n        this.node.height = colWidth;\r\n\r\n        this.isBlank = this.oriCol === colNum - 1 && this.oriRow === 0;\r\n        if (this.isBlank) {\r\n            this.node.active = false;\r\n        }\r\n    }\r\n\r\n}"]}